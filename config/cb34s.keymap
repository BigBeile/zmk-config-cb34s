/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keymap_eurkey_swiss_de.h"

#define DEFAULT_L 	0
#define NUMSYM_L 	1
#define NAV_L 		2
#define BLE_L 		3
#define COMFY_L		4
#define NUMBERS_L	5

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt {
    quick_tap_ms = <200>;
};

// Sticky Layer Behavior - release sticky behavior after x ms

&sk {
    release-after-ms = <1800>;
};

// COMBOS
// ===========================================================================================================
/*
	.----------------------------------------------------------------------.
	|  0  |  1  |  2  |  3  |  4  |          |  5  |  6  |  7  |  8  |  9  |
	|  10 |  11 |  12 |  13 |  14 |          |  15 |  16 |  17 |  18 |  19 |
	|  20 |  21 |  22 |  23 |  24 |          |  25 |  26 |  27 |  28 |  29 |
	'-----------------\  30 |  31 |          |  32 |  33 /-----------------'
	                   '--------------------------------'
			
	ESC 	= 0 | 1			
	TAB 	= 11 | 12		LC(C)	= 17 | 18
							LC(V)	= 27 | 28
	ENTER 	= 12 | 13		SK(SFT) = 16 | 17       SK(LALT) = 6 | 7
	LPAR 	= 13 | 14		RPAR 	= 15 | 16       REPEAT 	= 18 | 19

	TO_4	= 21 | 22
	TO_0	= 22 | 23       TO_0	= 26 | 27 
	TO_3	= 20 | 21 | 22	TO_3	= 27 | 28 | 29
    TO_5    = 3  | 13       TO_5    = 6  | 16

    T       = 10 | 13               T       = 16 | 19
    G       = 1  | 2                G       = 7  | 8
    B       = 20 | 23               B       = 26 | 29
    Y       = 20 | 21 | 22 | 23     Y       = 26 | 27 | 28 | 29
    H       = 21 | 23               H       = 26 | 28
    N       = 20 | 21               N       = 28 | 29

*/

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <40>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <40>;
            key-positions = <11 12>;
            bindings = <&kp TAB>;
        };

        combo_enter {
            timeout-ms = <40>;
            key-positions = <12 13>;
            bindings = <&kp ENTER>;
        };

        combo_lpar {
            timeout-ms = <40>;
            key-positions = <13 14>;
            bindings = <&kp LPAR>;
        };

        combo_rpar {
            timeout-ms = <40>;
            key-positions = <15 16>;
            bindings = <&kp RPAR>;
        };

        combo_comfy_left {
            timeout-ms = <40>;
            key-positions = <21 22>;
            bindings = <&to COMFY_L>;
        };

        combo_comfy_right {
            timeout-ms = <40>;
            key-positions = <27 28>;
            bindings = <&to COMFY_L>;
        };

        combo_default_left {
            timeout-ms = <40>;
            key-positions = <22 23>;
            bindings = <&to DEFAULT_L>;
        };

        combo_default_right {
            timeout-ms = <40>;
            key-positions = <26 27>;
            bindings = <&to DEFAULT_L>;
        };

        combo_sk_shift {
            timeout-ms = <40>;
            key-positions = <16 17>;
            bindings = <&sk LSHIFT>;
        };

        combo_sk_lalt{
            timeout-ms = <40>;
            key-positions = <6 7>;
            bindings = <&sk LALT>;
        };

        combo_ble_left {
            timeout-ms = <40>;
            key-positions = <20 21 22>;
            bindings = <&to BLE_L>;
        };

        combo_ble_right {
            timeout-ms = <40>;
            key-positions = <27 28 29>;
            bindings = <&to BLE_L>;
        };

        combo_numb_left {
            timeout-ms = <40>;
            key-positions = <3 13>;
            bindings = <&to NUMBERS_L>;
        };

        combo_numb_right {
            timeout-ms = <40>;
            key-positions = <6 16>;
            bindings = <&to NUMBERS_L>;
        };

        combo_dot_left {
            timeout-ms = <40>;
            key-positions = <13 22>;
            bindings = <&kp DOT>;
            layers = <5>;
        };

        combo_dot_right {
            timeout-ms = <40>;
            key-positions = <16 27>;
            bindings = <&kp DOT>;
            layers = <5>;
        };

        combo_repeat {
            timeout-ms = <40>;
            key-positions = <18 19>;
            bindings = <&key_repeat>;
        };

        combo_left_t {
            timeout-ms = <40>;
            key-positions = <10 13>;
            bindings = <&kp T>;
        };

        combo_right_t {
            timeout-ms = <40>;
            key-positions = <16 19>;
            bindings = <&kp T>;
        };

        combo_left_g {
            timeout-ms = <40>;
            key-positions = <1 2>;
            bindings = <&kp G>;
        };

        combo_right_g {
            timeout-ms = <40>;
            key-positions = <7 8>;
            bindings = <&kp G>;
        };

        combo_left_b {
            timeout-ms = <40>;
            key-positions = <20 23>;
            bindings = <&kp B>;
        };

        combo_right_b {
            timeout-ms = <40>;
            key-positions = <26 29>;
            bindings = <&kp B>;
        };

        combo_left_y {
            timeout-ms = <40>;
            key-positions = <20 21 22 23>;
            bindings = <&kp Y>;
        };

        combo_right_y {
            timeout-ms = <40>;
            key-positions = <26 27 28 29>;
            bindings = <&kp Y>;
        };

        combo_left_h {
            timeout-ms = <40>;
            key-positions = <21 23>;
            bindings = <&kp H>;
        };

        combo_right_h {
            timeout-ms = <40>;
            key-positions = <26 28>;
            bindings = <&kp H>;
        };

        combo_left_n {
            timeout-ms = <40>;
            key-positions = <20 21>;
            bindings = <&kp N>;
        };

        combo_right_n {
            timeout-ms = <40>;
            key-positions = <28 29>;
            bindings = <&kp N>;
        };
    };

    // BEHAVIOR    
    // ===========================================================================================================

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <170>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    // KEYMAP
    // ===========================================================================================================
    // -----------------------------------------------------------------------------
    /* 0 = Default
	.----------------------------------------------------------------------.
	|Q DEL|  W  |  E  |  R  |  T  |          |  Y  |  U  |  I  |  O  |  P  |
	|  A  |  S  |  D  |  F  |  G  |          |  H  |  J  |  K  |  L  |BKSPC|
	|  Z  |  X  |  C  |  V  |  B  |          |  N  |  M  |  ,  |  .  |MO_1 |
	'-----------------\ CTRL| SPC |          | SFT | RALT/-----------------'
	                   '--------------------------------'
*/

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
            &kp Q       &kp W        &kp E   &kp R   &kp T                   &kp Y   &kp U   &kp I       &kp O        &kp P
            &kp A       &mt LCTRL S  &kp D   &kp F   &kp G                   &kp H   &kp J   &kp K       &mt RALT L   &kp SEMI
            &mt LSHFT Z &kp X        &kp C   &kp V   &kp B                   &kp N   &kp M   &kp COMMA   &mt LGUI DOT &mt RSHFT FSLH
                                     &mt LALT DEL   &kp SPACE       		 &lt 2 BSPC       &lt 1 RET
            >;
        };

        numsym_layer {
            label = "Symbols";
            bindings = <
            >;&none     &none        &none      &none        &none                &none         &none          &none          &none         &none      
            &kp TAB   &bt BT_PRV   &bt BT_NXT &kp C_VOL_DN &kp C_VOL_UP           &kp LEFT      &kp DOWN       &kp UP         &kp RIGHT     &kp SQT
            &kp LSHFT &bt BT_SEL 0 &bt BT_CLR &kp C_MUTE   &kp LALT               &kp HOME      &kp END        &kp PG_UP      &kp PG_DN     &kp RSHFT
                                              &kp LGUI     &kp LCTRL              &trans        &kp LALT
             >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
   &kp ESC   &kp N7 &kp N8  &kp N9     &kp N0                    &out OUT_USB &out OUT_BLE &none      &kp EQUAL   &kp MINUS
            &none     &kp N4 &kp N5  &kp N6    &none             &kp LBKT     &kp RBKT     &none      &kp GRAVE   &kp BSLH
            &kp LSHFT &kp N1 &kp N2  &kp N3  &none               &none        &none        &sys_reset &bootloader &kp RSHFT
                                     &kp LGUI &kp LCTRL          &kp LALT     &trans
            >;
        };
    };
};

// ===========================================================================================================